/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     4.0                                |
|   \\  /    A nd           | Web:         http://www.foam-extend.org         |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     icoFoamPassive;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         10000;

deltaT          0.001;

writeControl    timeStep;

writeInterval   5000;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable yes;


functions

{
/*
wallShearStress1
	{
	type		wallShearStress;
           libs        ("libfieldFunctionObjects.so");
	patches		(obstacle);
	writePrecision	8;
	writeToFile	5000;
	executeControl	timeStep;
	writeControl	timeStep;
	writeInterval	5000;
	writeFields	true;
	}
averageWallShearStress
	{
	type		surfaceFieldValue;
	libs		("libfieldFunctionObjects.so");
	fields		(wallShearStress);
	operation		areaAverage;
	regionType		patch;
	surfaceFormat   	none;
	name		obstacle;
	writePrecision	8;
	writeToFile	true;
	executeControl	timeStep;
	executeInterval 	5000;

	writeControl	timeStep;
	writeInterval	5000;
	writeFields	true;
	}

	fieldAverage
    {
        type            fieldAverage;
        libs		("libfieldFunctionObjects.so");
	writePrecision	8;
	writeToFile	true;
	executeControl	timeStep;
	executeInterval 	5000;

	writeControl	timeStep;
	writeInterval	5000;
	writeFields	true;
        enabled         true;
        
        fields
        (
            U
            {
                mean            yes;
                prime2Mean      yes;
                base            time;
            }
          T 
            {
                mean            yes;
                prime2Mean      yes;
                base            time;
            }
           p
            {
                mean            yes;
                prime2Mean      yes;
                base            time;
            }
        );
    }
  forceCoeffs1
	{
           type        forceCoeffs;
           libs        ("libforces.so");
           log         yes;
           writeFields yes;
           patches     (obstacle);
           liftDir     (0 1 0);
           dragDir     (-1 0 0);
           pitchAxis   (0 0 1);
           CofR 	 (0 0 0);
           magUInf     1;
           lRef        1;
           rhoInf	 1.225;
           rho	 rhoInf;
           Aref        0.5;
           writePrecision	8;
	writeToFile	true;
	executeControl	timeStep;
	executeInterval 	1;
	writeControl	timeStep;
	writeInterval	500;
           }
*/
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
